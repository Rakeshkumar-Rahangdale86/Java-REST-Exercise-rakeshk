<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="8" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-12T05:53:11Z" name="AllRegression" finished-at="2020-06-12T05:53:16Z" duration-ms="5327">
    <groups>
    </groups>
    <test started-at="2020-06-12T05:53:11Z" name="APITest" finished-at="2020-06-12T05:53:16Z" duration-ms="5327">
      <class name="tests.TestClass">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:07Z" name="setup" finished-at="2020-06-12T05:53:11Z" duration-ms="3357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpBookingToBeUpdated()[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:11Z" name="setUpBookingToBeUpdated" finished-at="2020-06-12T05:53:11Z" duration-ms="406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBookingToBeUpdated -->
        <test-method signature="createBookingTestAllFields(request.pojos.ReqCreateBooking)[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:11Z" name="createBookingTestAllFields" data-provider="createBooking" finished-at="2020-06-12T05:53:11Z" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[request.pojos.ReqCreateBooking@4a44cfc0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingTestAllFields -->
        <test-method signature="createBookingTestAllFields(request.pojos.ReqCreateBooking)[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:11Z" name="createBookingTestAllFields" data-provider="createBooking" finished-at="2020-06-12T05:53:12Z" duration-ms="340" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[request.pojos.ReqCreateBooking@642ee49c]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: a value equal to or greater than <0>
     got: <-100>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: a value equal to or greater than <0>
     got: <-100>

at org.junit.Assert.assertThat(Assert.java:780)
at org.junit.Assert.assertThat(Assert.java:738)
at tests.TestClass.createBookingTestAllFields(TestClass.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingTestAllFields -->
        <test-method signature="createBookingTestAllFields(request.pojos.ReqCreateBooking)[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:12Z" name="createBookingTestAllFields" data-provider="createBooking" finished-at="2020-06-12T05:53:12Z" duration-ms="311" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[request.pojos.ReqCreateBooking@5d5a51b1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [500]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at tests.TestClass.createBookingTestAllFields(TestClass.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingTestAllFields -->
        <test-method signature="createBookingTestAllFields(request.pojos.ReqCreateBooking)[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:12Z" name="createBookingTestAllFields" data-provider="createBooking" finished-at="2020-06-12T05:53:12Z" duration-ms="307" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[request.pojos.ReqCreateBooking@2e62ead7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [500]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at tests.TestClass.createBookingTestAllFields(TestClass.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingTestAllFields -->
        <test-method signature="createBookingTestAllFields(request.pojos.ReqCreateBooking)[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:12Z" name="createBookingTestAllFields" data-provider="createBooking" finished-at="2020-06-12T05:53:13Z" duration-ms="319" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[request.pojos.ReqCreateBooking@51fc862e]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [500]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at tests.TestClass.createBookingTestAllFields(TestClass.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingTestAllFields -->
        <test-method signature="testUpdateBooking(java.lang.String)[pri:1, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:13Z" name="testUpdateBooking" data-provider="updateBooking" finished-at="2020-06-12T05:53:13Z" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"firstname":"Robert"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateBooking -->
        <test-method signature="testUpdateBooking(java.lang.String)[pri:1, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:13Z" name="testUpdateBooking" data-provider="updateBooking" finished-at="2020-06-12T05:53:13Z" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"lastname":"Swan"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateBooking -->
        <test-method signature="testUpdateBooking(java.lang.String)[pri:1, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:13Z" name="testUpdateBooking" data-provider="updateBooking" finished-at="2020-06-12T05:53:14Z" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"totalprice":500}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateBooking -->
        <test-method signature="testUpdateBooking(java.lang.String)[pri:1, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:14Z" name="testUpdateBooking" data-provider="updateBooking" finished-at="2020-06-12T05:53:14Z" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"depositpaid":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateBooking -->
        <test-method signature="testUpdateBooking(java.lang.String)[pri:1, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:14Z" name="testUpdateBooking" data-provider="updateBooking" finished-at="2020-06-12T05:53:14Z" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"bookingdates":{"checkin":"2020-01-31","checkout":"2020-02-10"}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateBooking -->
        <test-method signature="testUpdateBooking(java.lang.String)[pri:1, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:14Z" name="testUpdateBooking" data-provider="updateBooking" finished-at="2020-06-12T05:53:15Z" duration-ms="315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"additionalneeds":"Bonefire"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateBooking -->
        <test-method signature="testGetBookingAfterUpdate(response.pojos.Booking)[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:15Z" name="testGetBookingAfterUpdate" data-provider="getBooking" finished-at="2020-06-12T05:53:15Z" depends-on-methods="tests.TestClass.testUpdateBooking" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[response.pojos.Booking@3a1f2a1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBookingAfterUpdate -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestClass@157632c9]" started-at="2020-06-12T05:53:15Z" name="tearDown" finished-at="2020-06-12T05:53:16Z" duration-ms="938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TestClass -->
    </test> <!-- APITest -->
  </suite> <!-- AllRegression -->
</testng-results>
